// AUTOGENERATED FILE. Do not modify this file manually, it will be overwritten.
// finlang v0.3.0-alpha generated this file for C# `hal.Spi` type.
// Source file: `LedBlinker/hal/Spi.cs` (relative to C# solution).
// MD5 hash of source file: a2e7ef1d7924f7a01685eee868fb36c9.

#pragma once

#include "hal_Spi_port_implementation.h" // You need to provide this
#include <stdint.h>
#include "hal_ISpi.h"


// Class is a Foreign Function Interface. No struct generated.
void hal_Spi_write_array(hal_Spi * self, uint8_t * data, uint8_t data_length);

void hal_Spi_read_array(hal_Spi * self, uint8_t * data, uint8_t data_length);

void hal_Spi_read_write_array(hal_Spi * self, uint8_t * write_data, uint8_t * read_data, uint8_t data_length);

void hal_Spi_tx_byte(hal_Spi * self, uint8_t tx_byte);

uint8_t hal_Spi_rx_byte(hal_Spi * self);

uint8_t hal_Spi_rx_tx_byte(hal_Spi * self, uint8_t tx_byte);

void hal_Spi_rx_array(hal_Spi * self, uint8_t * data, uint8_t data_length);

void hal_Spi_tx_array(hal_Spi * self, uint8_t * data, uint8_t data_length);

void hal_Spi_rx_tx_array(hal_Spi * self, uint8_t * tx_data, uint8_t * rx_data, uint8_t data_length);

// vtable is extern to allow const initializations
extern const hal_ISpi_vtable hal_ISpi_vtable_imp;

// Up conversion from hal_Spi to hal_ISpi interface
#define M_hal_Spi__to__hal_ISpi(self_arg)    (hal_ISpi){ .obj = self_arg, .obj_vtable = (const hal_ISpi_vtable*)(&hal_ISpi_vtable_imp.tx_byte) }
