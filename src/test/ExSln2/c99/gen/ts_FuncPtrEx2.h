// AUTOGENERATED FILE. Do not modify this file manually, it will be overwritten.
// finlang generated this file for C# `ts.FuncPtrEx2` type.
// Source file: `LedBlinker/test_stuff/FuncPtrEx2.cs` (relative to C# solution).

#pragma once

#include <stdint.h>
#include "ts_FuncPtrEx2_Bike.h"


typedef int32_t (*ts_FuncPtrEx2_FuncPtr)(int32_t a, int32_t b);

/// <summary>
/// This is a delegate that takes a Bike and returns an i32.
/// </summary>
typedef int32_t (*ts_FuncPtrEx2_BikeSpeedFunc)(ts_FuncPtrEx2_Bike * bike);

/// <summary>
/// This is a delegate that takes a Bike and returns a Bike. Maybe for method chaining, but really just for testing :)
/// </summary>
typedef ts_FuncPtrEx2_Bike * (*ts_FuncPtrEx2_BikeBikeFunc)(ts_FuncPtrEx2_Bike * bike);

/// <summary>
/// This is a delegate that takes a Bike and returns a Bike. Maybe for method chaining, but really just for testing :)
/// </summary>
typedef ts_FuncPtrEx2_Bike * * (*ts_FuncPtrEx2_BikeArrayFunc)(ts_FuncPtrEx2_Bike * * bikes, uint8_t length);

typedef struct ts_FuncPtrEx2 ts_FuncPtrEx2;
struct ts_FuncPtrEx2
{
    ts_FuncPtrEx2_FuncPtr func ;
};

void ts_FuncPtrEx2_ctor(ts_FuncPtrEx2 * self);

int32_t ts_FuncPtrEx2_add(int32_t a, int32_t b);

int32_t ts_FuncPtrEx2_sub(int32_t a, int32_t b);

void ts_FuncPtrEx2_use_sub(ts_FuncPtrEx2 * self);

void ts_FuncPtrEx2_set(ts_FuncPtrEx2 * self, ts_FuncPtrEx2_FuncPtr f);

int32_t ts_FuncPtrEx2_Run(ts_FuncPtrEx2 * self, int32_t a, int32_t b);
