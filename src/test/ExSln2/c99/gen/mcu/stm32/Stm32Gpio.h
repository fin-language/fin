// AUTOGENERATED FILE. Do not modify this file manually, it will be overwritten.
// finlang generated this file for C# `mcu.stm32.Stm32Gpio` type.
// Source file: `LedBlinker\mcu\stm32\Stm32Gpio.cs` (relative to C# solution).

#pragma once

#include "mcu_stm32_Stm32Gpio_port_implementation.h" // You need to provide this
#include <stdbool.h>
#include "hal_IGpio.h"



/// <summary>
/// We want a .c/h file to be generated for this class and have it setup the vtable.
/// </summary>
typedef struct mcu_stm32_Stm32Gpio mcu_stm32_Stm32Gpio;
struct mcu_stm32_Stm32Gpio
{
    /// <summary>
    /// This is a string type so that we can use C99 types like GPIO_TypeDef that fin doesn't know about.
    /// </summary>
    GPIO_TypeDef * port;

    /// <summary>
    /// This is a string type so that we can use C99 defines like GPIO_PIN_0 that fin doesn't know about.
    /// </summary>
    uint16_t pin;
};


void mcu_stm32_Stm32Gpio_ctor(mcu_stm32_Stm32Gpio * self, GPIO_TypeDef * port, uint16_t pin);

// FFI function. User code must provide the implementation
bool mcu_stm32_Stm32Gpio_enable_pulldown(mcu_stm32_Stm32Gpio * self);

// FFI function. User code must provide the implementation
bool mcu_stm32_Stm32Gpio_enable_pullup(mcu_stm32_Stm32Gpio * self);

// FFI function. User code must provide the implementation
bool mcu_stm32_Stm32Gpio_read_state(mcu_stm32_Stm32Gpio * self);

// FFI function. User code must provide the implementation
void mcu_stm32_Stm32Gpio_set_state(mcu_stm32_Stm32Gpio * self, bool state);

// FFI function. User code must provide the implementation
void mcu_stm32_Stm32Gpio_toggle(mcu_stm32_Stm32Gpio * self);

// vtable is extern to allow const initializations
extern const hal_IGpio_vtable hal_IGpio_vtable_imp;

// Up conversion from mcu_stm32_Stm32Gpio to hal_IGpio interface
#define M_mcu_stm32_Stm32Gpio__to__hal_IGpio(self_arg)    (hal_IGpio){ .obj = self_arg, .obj_vtable = (const hal_IGpio_vtable*)(&hal_IGpio_vtable_imp.read_state) }

// Up conversion from mcu_stm32_Stm32Gpio to hal_IDigInOut interface
#define M_mcu_stm32_Stm32Gpio__to__hal_IDigInOut(self_arg)    (hal_IDigInOut){ .obj = self_arg, .obj_vtable = (const hal_IDigInOut_vtable*)(&hal_IGpio_vtable_imp.read_state) }

// Up conversion from mcu_stm32_Stm32Gpio to hal_IDigIn interface
#define M_mcu_stm32_Stm32Gpio__to__hal_IDigIn(self_arg)    (hal_IDigIn){ .obj = self_arg, .obj_vtable = (const hal_IDigIn_vtable*)(&hal_IGpio_vtable_imp.read_state) }

// Up conversion from mcu_stm32_Stm32Gpio to hal_IDigOut interface
#define M_mcu_stm32_Stm32Gpio__to__hal_IDigOut(self_arg)    (hal_IDigOut){ .obj = self_arg, .obj_vtable = (const hal_IDigOut_vtable*)(&hal_IGpio_vtable_imp.set_state) }
